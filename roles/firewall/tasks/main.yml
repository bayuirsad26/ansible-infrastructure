---
# Optimized Firewall Role - Auto-Integrated Network Security
# Automatically discovers services and configures appropriate rules

- name: Install firewall packages
  ansible.builtin.package:
    name: "{{ firewall_packages[ansible_os_family] }}"
    state: present
  when: firewall_enabled
  tags: [firewall, install]

- name: Configure UFW firewall (Debian/Ubuntu)
  when:
    - ansible_os_family == "Debian"
    - firewall_enabled
  tags: [firewall, ufw]
  block:
    - name: Reset UFW to defaults
      community.general.ufw:
        state: reset

    - name: Set UFW default policies
      community.general.ufw:
        direction: "{{ item.direction }}"
        policy: "{{ item.policy }}"
      loop:
        - { direction: "incoming", policy: "{{ firewall_default_policy }}" }
        - { direction: "outgoing", policy: "allow" }
        - { direction: "routed", policy: "{{ firewall_default_policy }}" }

    - name: Configure UFW logging
      community.general.ufw:
        logging: "{{ firewall_log_level }}"
      when: firewall_enable_logging

    - name: Configure auto-discovered service ports
      community.general.ufw:
        rule: allow
        port: "{{ item.value.port | string }}"
        proto: "{{ item.value.proto }}"
        src: "{{ item.value.source | default('any') }}"
        comment: "{{ item.value.comment }}"
      loop: "{{ firewall_service_ports | dict2items }}"
      when: item.value.enabled | default(false)

    - name: Configure custom firewall rules
      community.general.ufw:
        rule: allow
        port: "{{ item.port | string }}"
        proto: "{{ item.proto }}"
        src: "{{ item.source | default('any') }}"
        comment: "{{ item.comment | default('Custom rule') }}"
      loop: "{{ firewall_custom_rules }}"

    - name: Enable SSH rate limiting
      community.general.ufw:
        rule: limit
        port: "{{ common_ssh_port | default(22) }}"
        proto: tcp
        comment: "SSH rate limiting"
      when: firewall_enable_rate_limiting

    - name: Configure Docker integration (UFW)
      when:
        - firewall_docker_integration
        - ansible_facts['services']['docker.service'] is defined
      block:
        - name: Allow Docker bridge traffic
          community.general.ufw:
            rule: allow
            interface_in: "{{ firewall_docker_bridge }}"
            comment: "Docker bridge traffic"

        - name: Allow Docker container communication
          community.general.ufw:
            rule: allow
            interface_out: "{{ firewall_docker_bridge }}"
            comment: "Docker container outbound"

    - name: Enable UFW firewall
      community.general.ufw:
        state: enabled

- name: Configure firewalld (RedHat/CentOS)
  when:
    - ansible_os_family == "RedHat"
    - firewall_enabled
  tags: [firewall, firewalld]
  block:
    - name: Start and enable firewalld service
      ansible.builtin.systemd_service:
        name: firewalld
        state: started
        enabled: true

    - name: Configure firewalld default zone
      ansible.posix.firewalld:
        zone: public
        state: enabled
        permanent: true
        immediate: true

    - name: Configure auto-discovered service ports
      ansible.posix.firewalld:
        zone: public
        port: "{{ item.value.port }}/{{ item.value.proto }}"
        permanent: true
        immediate: true
        state: enabled
      loop: "{{ firewall_service_ports | dict2items }}"
      when: item.value.enabled | default(false)

    - name: Configure custom firewall rules
      ansible.posix.firewalld:
        zone: public
        port: "{{ item.port }}/{{ item.proto }}"
        permanent: true
        immediate: true
        state: enabled
      loop: "{{ firewall_custom_rules }}"

    - name: Configure Docker integration (firewalld)
      when:
        - firewall_docker_integration
        - ansible_facts['services']['docker.service'] is defined
      block:
        - name: Allow Docker bridge interface
          ansible.posix.firewalld:
            zone: trusted
            interface: "{{ firewall_docker_bridge }}"
            permanent: true
            immediate: true
            state: enabled

        - name: Enable masquerading for Docker
          ansible.posix.firewalld:
            zone: public
            masquerade: true
            permanent: true
            immediate: true
            state: enabled

- name: Create firewall status script
  ansible.builtin.copy:
    src: firewall-status.sh
    dest: /usr/local/bin/firewall-status
    mode: '0755'
  tags: [firewall, monitoring]

- name: Verify firewall configuration
  ansible.builtin.command:
    cmd: /usr/local/bin/firewall-status
  register: firewall_status_result
  changed_when: false
  tags: [firewall, verify]

- name: Display firewall configuration
  ansible.builtin.debug:
    msg:
      - "Firewall configured successfully"
      - "Type: {{ 'UFW' if ansible_os_family == 'Debian' else 'firewalld' }}"
      - "Default policy: {{ firewall_default_policy }}"
      - "Auto-discovered services: {{ firewall_service_ports | dict2items | selectattr('value.enabled') | list | length }}"
      - "Custom rules: {{ firewall_custom_rules | length }}"
      - "Docker integration: {{ 'Enabled' if firewall_docker_integration else 'Disabled' }}"
      - "Rate limiting: {{ 'Enabled' if firewall_enable_rate_limiting else 'Disabled' }}"
  tags: [firewall, info]
