---
# Optimized Docker Role - Streamlined Installation
# Focus on essential container platform setup

- name: Load OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
  tags: [docker, always]

- name: Remove old Docker packages
  ansible.builtin.package:
    name: "{{ docker_old_packages }}"
    state: absent
  tags: [docker, install]

- name: Install Docker repository and packages (Debian/Ubuntu)
  when:
    - ansible_os_family == "Debian"
    - docker_add_repo
  tags: [docker, install]
  block:
    - name: Create keyring directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Install Docker repository key
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc]
          https://download.docker.com/linux/{{ ansible_distribution | lower }}
          {{ ansible_distribution_release }} stable
        filename: docker
        update_cache: true

- name: Install Docker repository and packages (RedHat/CentOS)
  when:
    - ansible_os_family == "RedHat"
    - docker_add_repo
  tags: [docker, install]
  block:
    - name: Add Docker repository
      ansible.builtin.yum_repository:
        name: docker-ce
        description: Docker CE Repository
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgkey: https://download.docker.com/linux/centos/gpg
        gpgcheck: true

- name: Install Docker packages
  ansible.builtin.package:
    name: "{{ docker_packages }}"
    state: present
    update_cache: true
  notify: Restart Docker
  tags: [docker, install]

- name: Create docker group
  ansible.builtin.group:
    name: docker
    state: present
  tags: [docker, users]

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  loop: "{{ docker_users }}"
  when: docker_users | length > 0
  tags: [docker, users]

- name: Create Docker configuration directory
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: '0755'
  tags: [docker, config]

- name: Configure Docker daemon
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '0644'
    backup: true
  notify: Restart Docker
  tags: [docker, config]

- name: Apply Docker security hardening
  when: docker_security_enabled
  tags: [docker, security]
  block:
    - name: Create docker namespace mapping user
      ansible.builtin.user:
        name: dockremap
        system: true
        shell: /bin/false
        create_home: false

    - name: Configure user namespace subordinate UID
      ansible.builtin.lineinfile:
        path: /etc/subuid
        line: "dockremap:165536:65536"
        create: true
        mode: '0644'
      notify: Restart Docker

    - name: Configure user namespace subordinate GID
      ansible.builtin.lineinfile:
        path: /etc/subgid
        line: "dockremap:165536:65536"
        create: true
        mode: '0644'
      notify: Restart Docker

- name: Enable and start Docker service
  ansible.builtin.systemd_service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
    daemon_reload: true
  tags: [docker, service]

- name: Wait for Docker to be ready
  ansible.builtin.wait_for:
    path: /var/run/docker.sock
    timeout: 30
  tags: [docker, service]

- name: Verify Docker installation
  community.docker.docker_host_info:
  register: docker_info
  tags: [docker, verify]

- name: Display Docker configuration
  ansible.builtin.debug:
    msg:
      - "Docker installed successfully"
      - "Version: {{ docker_info.host_info.ServerVersion }}"
      - "Security hardening: {{ 'Enabled' if docker_security_enabled else 'Disabled' }}"
      - "Docker users: {{ docker_users | join(', ') if docker_users else 'None' }}"
  tags: [docker, info]
