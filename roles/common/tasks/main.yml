---
# Modern Common Role - Single Task File
# Essential base system configuration only
# Uses FQCN throughout for future-proofing

- name: Set system timezone
  community.general.timezone:
    name: "{{ common_timezone }}"
  tags: [common, system]

- name: Set system hostname
  ansible.builtin.hostname:
    name: "{{ common_hostname }}"
  tags: [common, system]

- name: Update package cache
  ansible.builtin.package:
    update_cache: true
  tags: [common, packages]

- name: Upgrade all packages
  ansible.builtin.package:
    name: "*"
    state: present
  when: common_update_packages
  tags: [common, packages]

- name: Install essential packages
  ansible.builtin.package:
    name: "{{ common_essential_packages + common_packages }}"
    state: present
  tags: [common, packages]

- name: Install security packages
  ansible.builtin.package:
    name: "{{ common_security_packages }}"
    state: present
  when: common_install_security_packages
  tags: [common, security, packages]

- name: Ensure sudo group exists
  ansible.builtin.group:
    name: "{{ common_sudo_group }}"
    state: present
  tags: [common, users]

- name: Create admin users
  ansible.builtin.user:
    name: "{{ item.name }}"
    groups: "{{ common_sudo_group }}"
    shell: /bin/bash
    create_home: true
    append: true
  loop: "{{ common_admin_users }}"
  tags: [common, users]

- name: Set up SSH keys for admin users
  ansible.posix.authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
    state: present
    exclusive: false
  loop: "{{ common_admin_users | subelements('ssh_keys', skip_missing=True) }}"
  tags: [common, users, ssh]

- name: Configure sudo access for admin users
  ansible.builtin.template:
    src: sudoers.j2
    dest: "/etc/sudoers.d/{{ item.name }}"
    mode: '0440'
    validate: 'visudo -cf %s'
  loop: "{{ common_admin_users }}"
  tags: [common, users, security]

- name: Harden SSH configuration
  when: common_harden_ssh
  tags: [common, ssh, security]
  block:
    - name: Backup original SSH config
      ansible.builtin.copy:
        src: /etc/ssh/sshd_config
        dest: /etc/ssh/sshd_config.backup
        remote_src: true
        force: false
        mode: '0600'

    - name: Configure SSH daemon
      ansible.builtin.template:
        src: sshd_config.j2
        dest: /etc/ssh/sshd_config
        mode: '0644'
        backup: true
        validate: 'sshd -t -f %s'
      notify: Restart SSH

- name: Apply basic kernel security parameters
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop: "{{ common_kernel_security_params | dict2items }}"
  tags: [common, security]

- name: Ensure SSH service is running
  ansible.builtin.systemd_service:
    name: "{{ common_ssh_service }}"
    state: started
    enabled: true
  tags: [common, ssh, service]

- name: Display common role completion info
  ansible.builtin.debug:
    msg:
      - "Common role applied successfully"
      - "Admin users: {{ common_admin_users | map(attribute='name') | list | join(', ') if common_admin_users else 'None' }}"
      - "SSH hardening: {{ 'Enabled' if common_harden_ssh else 'Disabled' }}"
      - "SSH port: {{ common_ssh_port }}"
      - "Timezone: {{ common_timezone }}"
  tags: [common, info]
