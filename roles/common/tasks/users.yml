---
- name: Create admin users
  ansible.builtin.user:
    name: "{{ item.name }}"
    groups: "{{ item.groups | default([]) }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    create_home: true
    state: present
  loop: "{{ common_admin_users }}"
  when: common_admin_users is defined
  tags: users

- name: Create service users
  ansible.builtin.user:
    name: "{{ item.name }}"
    system: "{{ item.system | default(false) }}"
    shell: "{{ item.shell | default('/bin/false') }}"
    home: "{{ item.home | default(omit) }}"
    create_home: "{{ item.create_home | default(false) }}"
    state: present
  loop: "{{ common_service_users }}"
  when: common_service_users is defined
  tags: users

- name: Set up SSH keys for admin users
  ansible.posix.authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
    state: present
    exclusive: false
  loop: "{{ common_admin_users | subelements('ssh_keys', skip_missing=True) }}"
  when: common_admin_users is defined
  tags: [users, ssh]

- name: Configure sudo access for admin users
  ansible.builtin.template:
    src: security/sudoers.j2
    dest: "/etc/sudoers.d/{{ item.name }}"
    mode: '0440'
    validate: 'visudo -cf %s'
  loop: "{{ common_admin_users }}"
  when:
    - common_admin_users is defined
    - item.sudo | default(true)
  tags: [users, security]

- name: Ensure proper permissions on home directories
  ansible.builtin.file:
    path: "/home/{{ item.name }}"
    mode: '0750'
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
  loop: "{{ common_admin_users }}"
  when: common_admin_users is defined
  tags: users
