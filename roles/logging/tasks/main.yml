---
# Optimized Logging Role - Simple & Effective
# Focus on rsyslog + forwarding for centralized platforms

- name: Install system logging packages
  ansible.builtin.package:
    name: "{{ logging_system_packages }}"
    state: present
  tags: [logging, packages]

- name: Configure rsyslog daemon
  ansible.builtin.template:
    src: rsyslog.conf.j2
    dest: /etc/rsyslog.conf
    mode: '0644'
    backup: true
  notify: Restart rsyslog
  when: logging_enable_rsyslog
  tags: [logging, rsyslog]

- name: Configure rsyslog forwarding
  ansible.builtin.template:
    src: 50-forwarding.conf.j2
    dest: /etc/rsyslog.d/50-forwarding.conf
    mode: '0644'
  notify: Restart rsyslog
  when:
    - logging_enable_forwarding
    - logging_destination != ""
  tags: [logging, forwarding]

- name: Configure journald for optimal performance
  ansible.builtin.lineinfile:
    path: /etc/systemd/journald.conf
    regexp: "^#?{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
    state: present
  loop:
    - { key: 'Storage', value: 'persistent' }
    - { key: 'SystemMaxUse', value: '500M' }
    - { key: 'SystemMaxFileSize', value: '{{ logging_max_log_size }}' }
    - { key: 'MaxRetentionSec', value: '{{ logging_retention_days * 24 * 3600 }}' }
    - { key: 'ForwardToSyslog', value: '{{ "yes" if logging_enable_rsyslog else "no" }}' }
  notify: Restart journald
  when: logging_enable_journald
  tags: [logging, journald]

- name: Configure log rotation
  ansible.builtin.template:
    src: logrotate.conf.j2
    dest: /etc/logrotate.d/system-logs
    mode: '0644'
  tags: [logging, rotation]

- name: Configure Docker logging driver
  ansible.builtin.lineinfile:
    path: /etc/docker/daemon.json
    regexp: '"log-driver":'
    line: '  "log-driver": "json-file",'
    insertafter: '{'
  notify: Restart Docker
  when:
    - logging_docker_logs
    - ansible_facts['services']['docker.service'] is defined
  tags: [logging, docker]

- name: Configure Docker log rotation
  ansible.builtin.lineinfile:
    path: /etc/docker/daemon.json
    regexp: '"log-opts":'
    line: '  "log-opts": { "max-size": "10m", "max-file": "3" },'
    insertafter: '"log-driver":'
  notify: Restart Docker
  when:
    - logging_docker_logs
    - ansible_facts['services']['docker.service'] is defined
  tags: [logging, docker]

- name: Enable and start rsyslog service
  ansible.builtin.systemd_service:
    name: rsyslog
    enabled: true
    state: started
  when: logging_enable_rsyslog
  tags: [logging, service]

- name: Setup log cleanup automation
  when: logging_enable_cleanup
  tags: [logging, cleanup]
  block:
    - name: Install log cleanup script
      ansible.builtin.copy:
        src: log-cleanup.sh
        dest: /usr/local/bin/log-cleanup
        mode: '0755'

    - name: Schedule log cleanup
      ansible.builtin.cron:
        name: "Log cleanup"
        minute: "0"
        hour: "2"
        job: "/usr/local/bin/log-cleanup {{ logging_retention_days }}"
        user: root

- name: Display logging configuration
  ansible.builtin.debug:
    msg:
      - "Logging configuration applied successfully"
      - "System logging: rsyslog + journald"
      - "Log forwarding: {{ 'Enabled' if logging_enable_forwarding else 'Disabled' }}"
      - "Destination: {{ logging_destination if logging_destination else 'Local only' }}"
      - "Container logs: {{ 'Enabled' if logging_docker_logs else 'Disabled' }}"
      - "Log retention: {{ logging_retention_days }} days"
      - "Log rotation: {{ logging_rotation_frequency }}"
  tags: [logging, info]
