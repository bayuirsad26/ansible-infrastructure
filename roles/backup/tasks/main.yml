---
# Simplified Backup Role - Basic Functionality
# Focus on essential backup needs

- name: Install backup packages
  ansible.builtin.package:
    name:
      - rsync
      - tar
      - gzip
    state: present
  tags: [backup, packages]

- name: Create backup user
  ansible.builtin.user:
    name: "{{ backup_user }}"
    system: true
    shell: /bin/bash
    home: "/var/lib/{{ backup_user }}"
    create_home: true
  tags: [backup, user]

- name: Create backup directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: '0750'
  loop:
    - "{{ backup_local_path }}"
    - "/var/lib/{{ backup_user }}"
    - "/var/log/backup"
  tags: [backup, directories]

- name: Create system backup script
  ansible.builtin.template:
    src: backup-system.sh.j2
    dest: /usr/local/bin/backup-system
    mode: '0755'
  tags: [backup, scripts]

- name: Create Docker backup script
  ansible.builtin.template:
    src: backup-docker.sh.j2
    dest: /usr/local/bin/backup-docker
    mode: '0755'
  when:
    - backup_docker_enabled
    - ansible_facts['services']['docker.service'] is defined
  tags: [backup, scripts]

- name: Schedule daily system backup
  ansible.builtin.cron:
    name: "Daily system backup"
    minute: "{{ backup_schedule_daily.split()[0] }}"
    hour: "{{ backup_schedule_daily.split()[1] }}"
    job: "/usr/local/bin/backup-system"
    user: root
  tags: [backup, cron]

- name: Schedule weekly Docker backup
  ansible.builtin.cron:
    name: "Weekly Docker backup"
    minute: "{{ backup_schedule_weekly.split()[0] }}"
    hour: "{{ backup_schedule_weekly.split()[1] }}"
    weekday: "{{ backup_schedule_weekly.split()[4] }}"
    job: "/usr/local/bin/backup-docker"
    user: root
  when:
    - backup_docker_enabled
    - ansible_facts['services']['docker.service'] is defined
  tags: [backup, cron]

- name: Display backup configuration
  ansible.builtin.debug:
    msg:
      - "Backup configuration applied"
      - "Local backups: {{ backup_local_path }}"
      - "Cloud backups: {{ 'Enabled' if backup_cloud_enabled else 'Disabled' }}"
      - "Docker backups: {{ 'Enabled' if backup_docker_enabled else 'Disabled' }}"
      - "Retention: {{ backup_retention_days }} days"
      - "Tool: {{ backup_tool }}"
  tags: [backup, info]
